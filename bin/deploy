#!/usr/bin/env bash
set -ex

export ETH_GAS=${ETH_GAS:-"7000000"}
export ETH_FROM=${ETH_FROM:-$(seth rpc eth_coinbase)}

test -z "$SKIP_BUILD" && dapp build

# Check all fabs are defined
(test -z $VAT_FAB || test -z $PIT_FAB || test -z $DRIP_FAB || test -z $VOW_FAB || test -z $CAT_FAB || test -z $TOKEN_FAB || test -z $MCD_APT_FAB || test -z $MCD_MOVE_FAB ||test -z $FLAP_FAB || test -z $FLOP_FAB || test -z $MOM_FAB || test -z $FLIP_FAB || test -z $PRICE_FAB) && exit 1

# If there is not Governance token defined, create one
test -z $MCD_GOV && MCD_GOV=$(dapp create DSToken $(seth --to-bytes32 $(seth --from-ascii "MKR")))

# Create deploy contract
MCD_DEPLOY=$(dapp create DssDeploy $VAT_FAB $PIT_FAB $DRIP_FAB $VOW_FAB $CAT_FAB $TOKEN_FAB $MCD_APT_FAB $MCD_MOVE_FAB $FLAP_FAB $FLOP_FAB $MOM_FAB $FLIP_FAB $PRICE_FAB)

# If there is not Authorty defined, create one
if [ -z $MCD_ADM ]
then
    MCD_ADM=$(dapp create DSRoles)
    seth send $MCD_ADM 'setRootUser(address,bool)' $ETH_FROM true
fi


# Deploy VAT
seth send $MCD_DEPLOY "deployVat()"

# Deploy PIT
seth send $MCD_DEPLOY "deployPit()"

# Deploy MCD
seth send $MCD_DEPLOY "deployDai()"

# Deploy Taxation
seth send $MCD_DEPLOY "deployTaxation(address)" $MCD_GOV

# Deploy Liquidation
seth send $MCD_DEPLOY "deployLiquidation(address)" $MCD_GOV

# Deploy mom
seth send $MCD_DEPLOY "deployMom(address)" $MCD_ADM

# Get Vat address
MCD_VAT=0x$(seth call $MCD_DEPLOY "vat()(address)")


cat > load-mcd-$(seth chain) << EOF
#!/bin/bash

# mcd deployment on $(seth chain) from $(git rev-parse HEAD)
# $(date)

export MCD_DEPLOY=$MCD_DEPLOY
export MCD_GOV=$MCD_GOV
export MCD_VAT=$MCD_VAT
export MCD_PIT=0x$(seth call $MCD_DEPLOY "pit()(address)")
export MCD_DRIP=0x$(seth call $MCD_DEPLOY "drip()(address)")
export MCD_CAT=0x$(seth call $MCD_DEPLOY "cat()(address)")
export MCD_VOW=0x$(seth call $MCD_DEPLOY "vow()(address)")
export MCD_MCD=0x$(seth call $MCD_DEPLOY "dai()(address)")
export MCD_APT_MCD=0x$(seth call $MCD_DEPLOY "daiApt()(address)")
export MCD_MOVE_MCD=0x$(seth call $MCD_DEPLOY "daiMove()(address)")
export MCD_FLAP=0x$(seth call $MCD_DEPLOY "flap()(address)")
export MCD_FLOP=0x$(seth call $MCD_DEPLOY "flop()(address)")
export MCD_MOM=0x$(seth call $MCD_DEPLOY "mom()(address)")
EOF
